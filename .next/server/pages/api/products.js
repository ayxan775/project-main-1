"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/products";
exports.ids = ["pages/api/products"];
exports.modules = {

/***/ "bcryptjs":
/*!***************************!*\
  !*** external "bcryptjs" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("bcryptjs");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ }),

/***/ "sqlite3":
/*!**************************!*\
  !*** external "sqlite3" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("sqlite3");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "url":
/*!**********************!*\
  !*** external "url" ***!
  \**********************/
/***/ ((module) => {

module.exports = require("url");

/***/ }),

/***/ "sqlite":
/*!*************************!*\
  !*** external "sqlite" ***!
  \*************************/
/***/ ((module) => {

module.exports = import("sqlite");;

/***/ }),

/***/ "(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fproducts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fproducts.ts&middlewareConfigBase64=e30%3D!":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fproducts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fproducts.ts&middlewareConfigBase64=e30%3D! ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/pages-api/module.compiled */ \"(api)/./node_modules/next/dist/server/future/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(api)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api)/./node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_products_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/products.ts */ \"(api)/./pages/api/products.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_products_ts__WEBPACK_IMPORTED_MODULE_3__, \"default\"));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_products_ts__WEBPACK_IMPORTED_MODULE_3__, \"config\");\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_future_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/products\",\n        pathname: \"/api/products\",\n        // The following aren't used in production.\n        bundlePath: \"\",\n        filename: \"\"\n    },\n    userland: _pages_api_products_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRnByb2R1Y3RzJnByZWZlcnJlZFJlZ2lvbj0mYWJzb2x1dGVQYWdlUGF0aD0uJTJGcGFnZXMlMkZhcGklMkZwcm9kdWN0cy50cyZtaWRkbGV3YXJlQ29uZmlnQmFzZTY0PWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDTDtBQUMxRDtBQUNvRDtBQUNwRDtBQUNBLGlFQUFlLHdFQUFLLENBQUMsbURBQVEsWUFBWSxFQUFDO0FBQzFDO0FBQ08sZUFBZSx3RUFBSyxDQUFDLG1EQUFRO0FBQ3BDO0FBQ08sd0JBQXdCLGdIQUFtQjtBQUNsRDtBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxZQUFZO0FBQ1osQ0FBQzs7QUFFRCIsInNvdXJjZXMiOlsid2VicGFjazovL3ZpdGUtcmVhY3QtdHlwZXNjcmlwdC1zdGFydGVyLz8wMjM1Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFBhZ2VzQVBJUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgaG9pc3QgfSBmcm9tIFwibmV4dC9kaXN0L2J1aWxkL3RlbXBsYXRlcy9oZWxwZXJzXCI7XG4vLyBJbXBvcnQgdGhlIHVzZXJsYW5kIGNvZGUuXG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiLi9wYWdlcy9hcGkvcHJvZHVjdHMudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgXCJkZWZhdWx0XCIpO1xuLy8gUmUtZXhwb3J0IGNvbmZpZy5cbmV4cG9ydCBjb25zdCBjb25maWcgPSBob2lzdCh1c2VybGFuZCwgXCJjb25maWdcIik7XG4vLyBDcmVhdGUgYW5kIGV4cG9ydCB0aGUgcm91dGUgbW9kdWxlIHRoYXQgd2lsbCBiZSBjb25zdW1lZC5cbmV4cG9ydCBjb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBQYWdlc0FQSVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5QQUdFU19BUEksXG4gICAgICAgIHBhZ2U6IFwiL2FwaS9wcm9kdWN0c1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL3Byb2R1Y3RzXCIsXG4gICAgICAgIC8vIFRoZSBmb2xsb3dpbmcgYXJlbid0IHVzZWQgaW4gcHJvZHVjdGlvbi5cbiAgICAgICAgYnVuZGxlUGF0aDogXCJcIixcbiAgICAgICAgZmlsZW5hbWU6IFwiXCJcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fproducts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fproducts.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api)/./pages/api/products.ts":
/*!*******************************!*\
  !*** ./pages/api/products.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _src_lib_db__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../src/lib/db */ \"(api)/./src/lib/db.ts\");\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || \"your-secret-key\";\n// Initialize DB flag\nlet dbInitialized = false;\n// Middleware to verify JWT token\nconst verifyToken = (req)=>{\n    return new Promise((resolve, reject)=>{\n        const authHeader = req.headers.authorization;\n        if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n            reject(new Error(\"Unauthorized\"));\n            return;\n        }\n        const token = authHeader.split(\" \")[1];\n        jsonwebtoken__WEBPACK_IMPORTED_MODULE_0___default().verify(token, JWT_SECRET, (err, decoded)=>{\n            if (err) {\n                reject(new Error(\"Unauthorized\"));\n                return;\n            }\n            resolve(decoded);\n        });\n    });\n};\nasync function handler(req, res) {\n    // Set proper JSON content type\n    res.setHeader(\"Content-Type\", \"application/json\");\n    // Handle preflight OPTIONS request for CORS\n    if (req.method === \"OPTIONS\") {\n        return res.status(200).end();\n    }\n    try {\n        // Initialize database if not already done\n        if (!dbInitialized) {\n            try {\n                await (0,_src_lib_db__WEBPACK_IMPORTED_MODULE_1__.initializeDB)();\n                dbInitialized = true;\n                console.log(\"DB initialized in products API\");\n            } catch (dbError) {\n                console.error(\"Failed to initialize database:\", dbError);\n                return res.status(500).json({\n                    message: \"Database initialization failed\",\n                    error: dbError instanceof Error ? dbError.message : String(dbError)\n                });\n            }\n        }\n        // Handle GET method without authentication for public product listing\n        if (req.method === \"GET\" && !req.query.id) {\n            const db = await (0,_src_lib_db__WEBPACK_IMPORTED_MODULE_1__.getDB)();\n            const products = await db.all(\"SELECT * FROM products\");\n            // Parse JSON strings back to arrays\n            const formattedProducts = products.map((product)=>({\n                    ...product,\n                    specs: JSON.parse(product.specs || \"[]\"),\n                    useCases: JSON.parse(product.useCases || \"[]\"),\n                    images: JSON.parse(product.images || \"[]\")\n                }));\n            return res.status(200).json(formattedProducts);\n        }\n        // Handle GET method for a single product\n        if (req.method === \"GET\" && req.query.id) {\n            const db = await (0,_src_lib_db__WEBPACK_IMPORTED_MODULE_1__.getDB)();\n            const product = await db.get(\"SELECT * FROM products WHERE id = ?\", [\n                req.query.id\n            ]);\n            if (!product) {\n                return res.status(404).json({\n                    message: \"Product not found\"\n                });\n            }\n            // Parse JSON strings back to arrays\n            const formattedProduct = {\n                ...product,\n                specs: JSON.parse(product.specs || \"[]\"),\n                useCases: JSON.parse(product.useCases || \"[]\"),\n                images: JSON.parse(product.images || \"[]\")\n            };\n            return res.status(200).json(formattedProduct);\n        }\n        // All other methods require authentication\n        try {\n            await verifyToken(req);\n        } catch (error) {\n            return res.status(401).json({\n                message: \"Unauthorized\"\n            });\n        }\n        // Handle POST method (create)\n        if (req.method === \"POST\") {\n            const { name, description, image, specs, useCases, category, images } = req.body;\n            if (!name) {\n                return res.status(400).json({\n                    message: \"Product name is required\"\n                });\n            }\n            const db = await (0,_src_lib_db__WEBPACK_IMPORTED_MODULE_1__.getDB)();\n            const result = await db.run(\"INSERT INTO products (name, description, image, specs, useCases, category, images) VALUES (?, ?, ?, ?, ?, ?, ?)\", [\n                name,\n                description || \"\",\n                image || \"\",\n                JSON.stringify(specs || []),\n                JSON.stringify(useCases || []),\n                category || \"\",\n                JSON.stringify(images || [])\n            ]);\n            const newProduct = await db.get(\"SELECT * FROM products WHERE id = ?\", [\n                result.lastID\n            ]);\n            return res.status(201).json({\n                ...newProduct,\n                specs: JSON.parse(newProduct.specs || \"[]\"),\n                useCases: JSON.parse(newProduct.useCases || \"[]\"),\n                images: JSON.parse(newProduct.images || \"[]\")\n            });\n        }\n        // Handle PUT method (update)\n        if (req.method === \"PUT\" && req.query.id) {\n            const { name, description, image, specs, useCases, category, images } = req.body;\n            if (!name) {\n                return res.status(400).json({\n                    message: \"Product name is required\"\n                });\n            }\n            const db = await (0,_src_lib_db__WEBPACK_IMPORTED_MODULE_1__.getDB)();\n            await db.run(\"UPDATE products SET name = ?, description = ?, image = ?, specs = ?, useCases = ?, category = ?, images = ? WHERE id = ?\", [\n                name,\n                description || \"\",\n                image || \"\",\n                JSON.stringify(specs || []),\n                JSON.stringify(useCases || []),\n                category || \"\",\n                JSON.stringify(images || []),\n                req.query.id\n            ]);\n            const updatedProduct = await db.get(\"SELECT * FROM products WHERE id = ?\", [\n                req.query.id\n            ]);\n            if (!updatedProduct) {\n                return res.status(404).json({\n                    message: \"Product not found\"\n                });\n            }\n            return res.status(200).json({\n                ...updatedProduct,\n                specs: JSON.parse(updatedProduct.specs || \"[]\"),\n                useCases: JSON.parse(updatedProduct.useCases || \"[]\"),\n                images: JSON.parse(updatedProduct.images || \"[]\")\n            });\n        }\n        // Handle DELETE method\n        if (req.method === \"DELETE\" && req.query.id) {\n            const db = await (0,_src_lib_db__WEBPACK_IMPORTED_MODULE_1__.getDB)();\n            const product = await db.get(\"SELECT * FROM products WHERE id = ?\", [\n                req.query.id\n            ]);\n            if (!product) {\n                return res.status(404).json({\n                    message: \"Product not found\"\n                });\n            }\n            await db.run(\"DELETE FROM products WHERE id = ?\", [\n                req.query.id\n            ]);\n            return res.status(200).json({\n                message: \"Product deleted successfully\"\n            });\n        }\n        // Handle unsupported methods\n        return res.status(405).json({\n            message: \"Method not allowed\"\n        });\n    } catch (error) {\n        console.error(\"Products API error:\", error);\n        return res.status(500).json({\n            message: \"Internal server error\"\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUM7Z0JBQzFCLEdBQUc0QixjQUFjO2dCQUNqQmpCLE9BQU9DLEtBQUtDLEtBQUssQ0FBQ2UsZUFBZWpCLEtBQUssSUFBSTtnQkFDMUNHLFVBQVVGLEtBQUtDLEtBQUssQ0FBQ2UsZUFBZWQsUUFBUSxJQUFJO2dCQUNoREMsUUFBUUgsS0FBS0MsS0FBSyxDQUFDZSxlQUFlYixNQUFNLElBQUk7WUFDOUM7UUFDRjtRQUVBLHVCQUF1QjtRQUN2QixJQUFJdkMsSUFBSWlCLE1BQU0sS0FBSyxZQUFZakIsSUFBSTJCLEtBQUssQ0FBQ0MsRUFBRSxFQUFFO1lBQzNDLE1BQU1DLEtBQUssTUFBTXBDLGtEQUFLQTtZQUN0QixNQUFNeUMsVUFBVSxNQUFNTCxHQUFHVyxHQUFHLENBQUMsdUNBQXVDO2dCQUFDeEMsSUFBSTJCLEtBQUssQ0FBQ0MsRUFBRTthQUFDO1lBRWxGLElBQUksQ0FBQ00sU0FBUztnQkFDWixPQUFPbkIsSUFBSUcsTUFBTSxDQUFDLEtBQUtNLElBQUksQ0FBQztvQkFBRUMsU0FBUztnQkFBb0I7WUFDN0Q7WUFFQSxNQUFNSSxHQUFHbUIsR0FBRyxDQUFDLHFDQUFxQztnQkFBQ2hELElBQUkyQixLQUFLLENBQUNDLEVBQUU7YUFBQztZQUVoRSxPQUFPYixJQUFJRyxNQUFNLENBQUMsS0FBS00sSUFBSSxDQUFDO2dCQUFFQyxTQUFTO1lBQStCO1FBQ3hFO1FBRUEsNkJBQTZCO1FBQzdCLE9BQU9WLElBQUlHLE1BQU0sQ0FBQyxLQUFLTSxJQUFJLENBQUM7WUFBRUMsU0FBUztRQUFxQjtJQUM5RCxFQUFFLE9BQU9GLE9BQU87UUFDZEgsUUFBUUcsS0FBSyxDQUFDLHVCQUF1QkE7UUFDckMsT0FBT1IsSUFBSUcsTUFBTSxDQUFDLEtBQUtNLElBQUksQ0FBQztZQUFFQyxTQUFTO1FBQXdCO0lBQ2pFO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly92aXRlLXJlYWN0LXR5cGVzY3JpcHQtc3RhcnRlci8uL3BhZ2VzL2FwaS9wcm9kdWN0cy50cz8zNTE2Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5leHRBcGlSZXF1ZXN0LCBOZXh0QXBpUmVzcG9uc2UgfSBmcm9tICduZXh0JztcbmltcG9ydCBqd3QgZnJvbSAnanNvbndlYnRva2VuJztcbmltcG9ydCB7IGdldERCLCBpbml0aWFsaXplREIgfSBmcm9tICcuLi8uLi9zcmMvbGliL2RiJztcblxuY29uc3QgSldUX1NFQ1JFVCA9IHByb2Nlc3MuZW52LkpXVF9TRUNSRVQgfHwgJ3lvdXItc2VjcmV0LWtleSc7XG5cbi8vIEluaXRpYWxpemUgREIgZmxhZ1xubGV0IGRiSW5pdGlhbGl6ZWQgPSBmYWxzZTtcblxuLy8gTWlkZGxld2FyZSB0byB2ZXJpZnkgSldUIHRva2VuXG5jb25zdCB2ZXJpZnlUb2tlbiA9IChyZXE6IE5leHRBcGlSZXF1ZXN0KTogUHJvbWlzZTxhbnk+ID0+IHtcbiAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICBjb25zdCBhdXRoSGVhZGVyID0gcmVxLmhlYWRlcnMuYXV0aG9yaXphdGlvbjtcbiAgICBcbiAgICBpZiAoIWF1dGhIZWFkZXIgfHwgIWF1dGhIZWFkZXIuc3RhcnRzV2l0aCgnQmVhcmVyICcpKSB7XG4gICAgICByZWplY3QobmV3IEVycm9yKCdVbmF1dGhvcml6ZWQnKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgdG9rZW4gPSBhdXRoSGVhZGVyLnNwbGl0KCcgJylbMV07XG4gICAgXG4gICAgand0LnZlcmlmeSh0b2tlbiwgSldUX1NFQ1JFVCwgKGVyciwgZGVjb2RlZCkgPT4ge1xuICAgICAgaWYgKGVycikge1xuICAgICAgICByZWplY3QobmV3IEVycm9yKCdVbmF1dGhvcml6ZWQnKSk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIHJlc29sdmUoZGVjb2RlZCk7XG4gICAgfSk7XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXE6IE5leHRBcGlSZXF1ZXN0LCByZXM6IE5leHRBcGlSZXNwb25zZSkge1xuICAvLyBTZXQgcHJvcGVyIEpTT04gY29udGVudCB0eXBlXG4gIHJlcy5zZXRIZWFkZXIoJ0NvbnRlbnQtVHlwZScsICdhcHBsaWNhdGlvbi9qc29uJyk7XG4gIFxuICAvLyBIYW5kbGUgcHJlZmxpZ2h0IE9QVElPTlMgcmVxdWVzdCBmb3IgQ09SU1xuICBpZiAocmVxLm1ldGhvZCA9PT0gJ09QVElPTlMnKSB7XG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5lbmQoKTtcbiAgfVxuICBcbiAgdHJ5IHtcbiAgICAvLyBJbml0aWFsaXplIGRhdGFiYXNlIGlmIG5vdCBhbHJlYWR5IGRvbmVcbiAgICBpZiAoIWRiSW5pdGlhbGl6ZWQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGluaXRpYWxpemVEQigpO1xuICAgICAgICBkYkluaXRpYWxpemVkID0gdHJ1ZTtcbiAgICAgICAgY29uc29sZS5sb2coJ0RCIGluaXRpYWxpemVkIGluIHByb2R1Y3RzIEFQSScpO1xuICAgICAgfSBjYXRjaCAoZGJFcnJvcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdGYWlsZWQgdG8gaW5pdGlhbGl6ZSBkYXRhYmFzZTonLCBkYkVycm9yKTtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKHsgXG4gICAgICAgICAgbWVzc2FnZTogJ0RhdGFiYXNlIGluaXRpYWxpemF0aW9uIGZhaWxlZCcsXG4gICAgICAgICAgZXJyb3I6IGRiRXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGRiRXJyb3IubWVzc2FnZSA6IFN0cmluZyhkYkVycm9yKVxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgLy8gSGFuZGxlIEdFVCBtZXRob2Qgd2l0aG91dCBhdXRoZW50aWNhdGlvbiBmb3IgcHVibGljIHByb2R1Y3QgbGlzdGluZ1xuICAgIGlmIChyZXEubWV0aG9kID09PSAnR0VUJyAmJiAhcmVxLnF1ZXJ5LmlkKSB7XG4gICAgICBjb25zdCBkYiA9IGF3YWl0IGdldERCKCk7XG4gICAgICBjb25zdCBwcm9kdWN0cyA9IGF3YWl0IGRiLmFsbCgnU0VMRUNUICogRlJPTSBwcm9kdWN0cycpO1xuICAgICAgXG4gICAgICAvLyBQYXJzZSBKU09OIHN0cmluZ3MgYmFjayB0byBhcnJheXNcbiAgICAgIGNvbnN0IGZvcm1hdHRlZFByb2R1Y3RzID0gcHJvZHVjdHMubWFwKChwcm9kdWN0OiBhbnkpID0+ICh7XG4gICAgICAgIC4uLnByb2R1Y3QsXG4gICAgICAgIHNwZWNzOiBKU09OLnBhcnNlKHByb2R1Y3Quc3BlY3MgfHwgJ1tdJyksXG4gICAgICAgIHVzZUNhc2VzOiBKU09OLnBhcnNlKHByb2R1Y3QudXNlQ2FzZXMgfHwgJ1tdJyksXG4gICAgICAgIGltYWdlczogSlNPTi5wYXJzZShwcm9kdWN0LmltYWdlcyB8fCAnW10nKVxuICAgICAgfSkpO1xuICAgICAgXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oZm9ybWF0dGVkUHJvZHVjdHMpO1xuICAgIH1cbiAgICBcbiAgICAvLyBIYW5kbGUgR0VUIG1ldGhvZCBmb3IgYSBzaW5nbGUgcHJvZHVjdFxuICAgIGlmIChyZXEubWV0aG9kID09PSAnR0VUJyAmJiByZXEucXVlcnkuaWQpIHtcbiAgICAgIGNvbnN0IGRiID0gYXdhaXQgZ2V0REIoKTtcbiAgICAgIGNvbnN0IHByb2R1Y3QgPSBhd2FpdCBkYi5nZXQoJ1NFTEVDVCAqIEZST00gcHJvZHVjdHMgV0hFUkUgaWQgPSA/JywgW3JlcS5xdWVyeS5pZF0pO1xuICAgICAgXG4gICAgICBpZiAoIXByb2R1Y3QpIHtcbiAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5qc29uKHsgbWVzc2FnZTogJ1Byb2R1Y3Qgbm90IGZvdW5kJyB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgLy8gUGFyc2UgSlNPTiBzdHJpbmdzIGJhY2sgdG8gYXJyYXlzXG4gICAgICBjb25zdCBmb3JtYXR0ZWRQcm9kdWN0ID0ge1xuICAgICAgICAuLi5wcm9kdWN0LFxuICAgICAgICBzcGVjczogSlNPTi5wYXJzZShwcm9kdWN0LnNwZWNzIHx8ICdbXScpLFxuICAgICAgICB1c2VDYXNlczogSlNPTi5wYXJzZShwcm9kdWN0LnVzZUNhc2VzIHx8ICdbXScpLFxuICAgICAgICBpbWFnZXM6IEpTT04ucGFyc2UocHJvZHVjdC5pbWFnZXMgfHwgJ1tdJylcbiAgICAgIH07XG4gICAgICBcbiAgICAgIHJldHVybiByZXMuc3RhdHVzKDIwMCkuanNvbihmb3JtYXR0ZWRQcm9kdWN0KTtcbiAgICB9XG4gICAgXG4gICAgLy8gQWxsIG90aGVyIG1ldGhvZHMgcmVxdWlyZSBhdXRoZW50aWNhdGlvblxuICAgIHRyeSB7XG4gICAgICBhd2FpdCB2ZXJpZnlUb2tlbihyZXEpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLmpzb24oeyBtZXNzYWdlOiAnVW5hdXRob3JpemVkJyB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gSGFuZGxlIFBPU1QgbWV0aG9kIChjcmVhdGUpXG4gICAgaWYgKHJlcS5tZXRob2QgPT09ICdQT1NUJykge1xuICAgICAgY29uc3QgeyBuYW1lLCBkZXNjcmlwdGlvbiwgaW1hZ2UsIHNwZWNzLCB1c2VDYXNlcywgY2F0ZWdvcnksIGltYWdlcyB9ID0gcmVxLmJvZHk7XG4gICAgICBcbiAgICAgIGlmICghbmFtZSkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDApLmpzb24oeyBtZXNzYWdlOiAnUHJvZHVjdCBuYW1lIGlzIHJlcXVpcmVkJyB9KTtcbiAgICAgIH1cbiAgICAgIFxuICAgICAgY29uc3QgZGIgPSBhd2FpdCBnZXREQigpO1xuICAgICAgY29uc3QgcmVzdWx0ID0gYXdhaXQgZGIucnVuKFxuICAgICAgICAnSU5TRVJUIElOVE8gcHJvZHVjdHMgKG5hbWUsIGRlc2NyaXB0aW9uLCBpbWFnZSwgc3BlY3MsIHVzZUNhc2VzLCBjYXRlZ29yeSwgaW1hZ2VzKSBWQUxVRVMgKD8sID8sID8sID8sID8sID8sID8pJyxcbiAgICAgICAgW1xuICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgZGVzY3JpcHRpb24gfHwgJycsXG4gICAgICAgICAgaW1hZ2UgfHwgJycsXG4gICAgICAgICAgSlNPTi5zdHJpbmdpZnkoc3BlY3MgfHwgW10pLFxuICAgICAgICAgIEpTT04uc3RyaW5naWZ5KHVzZUNhc2VzIHx8IFtdKSxcbiAgICAgICAgICBjYXRlZ29yeSB8fCAnJyxcbiAgICAgICAgICBKU09OLnN0cmluZ2lmeShpbWFnZXMgfHwgW10pXG4gICAgICAgIF1cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGNvbnN0IG5ld1Byb2R1Y3QgPSBhd2FpdCBkYi5nZXQoJ1NFTEVDVCAqIEZST00gcHJvZHVjdHMgV0hFUkUgaWQgPSA/JywgW3Jlc3VsdC5sYXN0SURdKTtcbiAgICAgIFxuICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAxKS5qc29uKHtcbiAgICAgICAgLi4ubmV3UHJvZHVjdCxcbiAgICAgICAgc3BlY3M6IEpTT04ucGFyc2UobmV3UHJvZHVjdC5zcGVjcyB8fCAnW10nKSxcbiAgICAgICAgdXNlQ2FzZXM6IEpTT04ucGFyc2UobmV3UHJvZHVjdC51c2VDYXNlcyB8fCAnW10nKSxcbiAgICAgICAgaW1hZ2VzOiBKU09OLnBhcnNlKG5ld1Byb2R1Y3QuaW1hZ2VzIHx8ICdbXScpXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gSGFuZGxlIFBVVCBtZXRob2QgKHVwZGF0ZSlcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ1BVVCcgJiYgcmVxLnF1ZXJ5LmlkKSB7XG4gICAgICBjb25zdCB7IG5hbWUsIGRlc2NyaXB0aW9uLCBpbWFnZSwgc3BlY3MsIHVzZUNhc2VzLCBjYXRlZ29yeSwgaW1hZ2VzIH0gPSByZXEuYm9keTtcbiAgICAgIFxuICAgICAgaWYgKCFuYW1lKSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IG1lc3NhZ2U6ICdQcm9kdWN0IG5hbWUgaXMgcmVxdWlyZWQnIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICBjb25zdCBkYiA9IGF3YWl0IGdldERCKCk7XG4gICAgICBhd2FpdCBkYi5ydW4oXG4gICAgICAgICdVUERBVEUgcHJvZHVjdHMgU0VUIG5hbWUgPSA/LCBkZXNjcmlwdGlvbiA9ID8sIGltYWdlID0gPywgc3BlY3MgPSA/LCB1c2VDYXNlcyA9ID8sIGNhdGVnb3J5ID0gPywgaW1hZ2VzID0gPyBXSEVSRSBpZCA9ID8nLFxuICAgICAgICBbXG4gICAgICAgICAgbmFtZSxcbiAgICAgICAgICBkZXNjcmlwdGlvbiB8fCAnJyxcbiAgICAgICAgICBpbWFnZSB8fCAnJyxcbiAgICAgICAgICBKU09OLnN0cmluZ2lmeShzcGVjcyB8fCBbXSksXG4gICAgICAgICAgSlNPTi5zdHJpbmdpZnkodXNlQ2FzZXMgfHwgW10pLFxuICAgICAgICAgIGNhdGVnb3J5IHx8ICcnLFxuICAgICAgICAgIEpTT04uc3RyaW5naWZ5KGltYWdlcyB8fCBbXSksXG4gICAgICAgICAgcmVxLnF1ZXJ5LmlkXG4gICAgICAgIF1cbiAgICAgICk7XG4gICAgICBcbiAgICAgIGNvbnN0IHVwZGF0ZWRQcm9kdWN0ID0gYXdhaXQgZGIuZ2V0KCdTRUxFQ1QgKiBGUk9NIHByb2R1Y3RzIFdIRVJFIGlkID0gPycsIFtyZXEucXVlcnkuaWRdKTtcbiAgICAgIFxuICAgICAgaWYgKCF1cGRhdGVkUHJvZHVjdCkge1xuICAgICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDQpLmpzb24oeyBtZXNzYWdlOiAnUHJvZHVjdCBub3QgZm91bmQnIH0pO1xuICAgICAgfVxuICAgICAgXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oe1xuICAgICAgICAuLi51cGRhdGVkUHJvZHVjdCxcbiAgICAgICAgc3BlY3M6IEpTT04ucGFyc2UodXBkYXRlZFByb2R1Y3Quc3BlY3MgfHwgJ1tdJyksXG4gICAgICAgIHVzZUNhc2VzOiBKU09OLnBhcnNlKHVwZGF0ZWRQcm9kdWN0LnVzZUNhc2VzIHx8ICdbXScpLFxuICAgICAgICBpbWFnZXM6IEpTT04ucGFyc2UodXBkYXRlZFByb2R1Y3QuaW1hZ2VzIHx8ICdbXScpXG4gICAgICB9KTtcbiAgICB9XG4gICAgXG4gICAgLy8gSGFuZGxlIERFTEVURSBtZXRob2RcbiAgICBpZiAocmVxLm1ldGhvZCA9PT0gJ0RFTEVURScgJiYgcmVxLnF1ZXJ5LmlkKSB7XG4gICAgICBjb25zdCBkYiA9IGF3YWl0IGdldERCKCk7XG4gICAgICBjb25zdCBwcm9kdWN0ID0gYXdhaXQgZGIuZ2V0KCdTRUxFQ1QgKiBGUk9NIHByb2R1Y3RzIFdIRVJFIGlkID0gPycsIFtyZXEucXVlcnkuaWRdKTtcbiAgICAgIFxuICAgICAgaWYgKCFwcm9kdWN0KSB7XG4gICAgICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuanNvbih7IG1lc3NhZ2U6ICdQcm9kdWN0IG5vdCBmb3VuZCcgfSk7XG4gICAgICB9XG4gICAgICBcbiAgICAgIGF3YWl0IGRiLnJ1bignREVMRVRFIEZST00gcHJvZHVjdHMgV0hFUkUgaWQgPSA/JywgW3JlcS5xdWVyeS5pZF0pO1xuICAgICAgXG4gICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oeyBtZXNzYWdlOiAnUHJvZHVjdCBkZWxldGVkIHN1Y2Nlc3NmdWxseScgfSk7XG4gICAgfVxuICAgIFxuICAgIC8vIEhhbmRsZSB1bnN1cHBvcnRlZCBtZXRob2RzXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA1KS5qc29uKHsgbWVzc2FnZTogJ01ldGhvZCBub3QgYWxsb3dlZCcgfSk7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcignUHJvZHVjdHMgQVBJIGVycm9yOicsIGVycm9yKTtcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg1MDApLmpzb24oeyBtZXNzYWdlOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9KTtcbiAgfVxufSAiXSwibmFtZXMiOlsiand0IiwiZ2V0REIiLCJpbml0aWFsaXplREIiLCJKV1RfU0VDUkVUIiwicHJvY2VzcyIsImVudiIsImRiSW5pdGlhbGl6ZWQiLCJ2ZXJpZnlUb2tlbiIsInJlcSIsIlByb21pc2UiLCJyZXNvbHZlIiwicmVqZWN0IiwiYXV0aEhlYWRlciIsImhlYWRlcnMiLCJhdXRob3JpemF0aW9uIiwic3RhcnRzV2l0aCIsIkVycm9yIiwidG9rZW4iLCJzcGxpdCIsInZlcmlmeSIsImVyciIsImRlY29kZWQiLCJoYW5kbGVyIiwicmVzIiwic2V0SGVhZGVyIiwibWV0aG9kIiwic3RhdHVzIiwiZW5kIiwiY29uc29sZSIsImxvZyIsImRiRXJyb3IiLCJlcnJvciIsImpzb24iLCJtZXNzYWdlIiwiU3RyaW5nIiwicXVlcnkiLCJpZCIsImRiIiwicHJvZHVjdHMiLCJhbGwiLCJmb3JtYXR0ZWRQcm9kdWN0cyIsIm1hcCIsInByb2R1Y3QiLCJzcGVjcyIsIkpTT04iLCJwYXJzZSIsInVzZUNhc2VzIiwiaW1hZ2VzIiwiZ2V0IiwiZm9ybWF0dGVkUHJvZHVjdCIsIm5hbWUiLCJkZXNjcmlwdGlvbiIsImltYWdlIiwiY2F0ZWdvcnkiLCJib2R5IiwicmVzdWx0IiwicnVuIiwic3RyaW5naWZ5IiwibmV3UHJvZHVjdCIsImxhc3RJRCIsInVwZGF0ZWRQcm9kdWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./pages/api/products.ts\n");

/***/ }),

/***/ "(api)/./src/lib/db.ts":
/*!***********************!*\
  !*** ./src/lib/db.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   closeDB: () => (/* binding */ closeDB),\n/* harmony export */   getDB: () => (/* binding */ getDB),\n/* harmony export */   initializeDB: () => (/* binding */ initializeDB)\n/* harmony export */ });\n// Check if we're running on the server to avoid errors in the browser\nconst isServer = \"undefined\" === \"undefined\";\n// Initialize database\nasync function initializeDB() {\n    if (!isServer) {\n        throw new Error(\"Database operations can only be performed on the server\");\n    }\n    try {\n        // Dynamic imports to avoid issues with client-side code\n        const { open } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! sqlite */ \"sqlite\"));\n        const sqlite3 = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! sqlite3 */ \"sqlite3\", 23));\n        const bcrypt = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! bcryptjs */ \"bcryptjs\", 23));\n        const path = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! path */ \"path\", 23));\n        const url = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! url */ \"url\", 23));\n        const fs = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs */ \"fs\", 23));\n        // Setup paths\n        const __filename = url.fileURLToPath(\"file:///home/home/Desktop/project-main/src/lib/db.ts\");\n        const __dirname = path.dirname(__filename);\n        const DB_PATH = path.join(process.cwd(), \"data.db\");\n        console.log(\"Initializing database at:\", DB_PATH);\n        const db = await open({\n            filename: DB_PATH,\n            driver: sqlite3.default.Database\n        });\n        console.log(\"Connected to database\");\n        // Create tables if they don't exist\n        await db.exec(`\n      CREATE TABLE IF NOT EXISTS users (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        username TEXT UNIQUE NOT NULL,\n        password TEXT NOT NULL,\n        created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n      );\n\n      CREATE TABLE IF NOT EXISTS categories (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT UNIQUE NOT NULL,\n        description TEXT,\n        created_at DATETIME DEFAULT CURRENT_TIMESTAMP\n      );\n\n      CREATE TABLE IF NOT EXISTS products (\n        id INTEGER PRIMARY KEY AUTOINCREMENT,\n        name TEXT NOT NULL,\n        description TEXT,\n        image TEXT,\n        specs TEXT,\n        useCases TEXT,\n        category TEXT,\n        images TEXT,\n        created_at DATETIME DEFAULT CURRENT_TIMESTAMP,\n        FOREIGN KEY (category) REFERENCES categories(name)\n      );\n    `);\n        console.log(\"Database tables created\");\n        // Check if admin user exists, if not create it\n        const adminUser = await db.get(\"SELECT * FROM users WHERE username = ?\", [\n            \"admin\"\n        ]);\n        if (!adminUser) {\n            const hashedPassword = await bcrypt.hash(\"Azerbaycan123\", 10);\n            await db.run(\"INSERT INTO users (username, password) VALUES (?, ?)\", [\n                \"admin\",\n                hashedPassword\n            ]);\n            console.log(\"Admin user created\");\n        }\n        // Initialize default categories if none exist\n        const categoriesCount = await db.get(\"SELECT COUNT(*) as count FROM categories\");\n        if (categoriesCount.count === 0) {\n            const defaultCategories = [\n                {\n                    name: \"Industrial Equipment\",\n                    description: \"Heavy-duty industrial machinery and equipment\"\n                },\n                {\n                    name: \"Safety Gear\",\n                    description: \"Personal protective equipment and safety solutions\"\n                },\n                {\n                    name: \"Measurement Tools\",\n                    description: \"Precision measurement and testing instruments\"\n                },\n                {\n                    name: \"Fluid Control\",\n                    description: \"Valves, pumps, and fluid management systems\"\n                },\n                {\n                    name: \"Power Systems\",\n                    description: \"Power generation and electrical equipment\"\n                },\n                {\n                    name: \"Construction Equipment\",\n                    description: \"Tools and equipment for construction projects\"\n                }\n            ];\n            for (const category of defaultCategories){\n                await db.run(\"INSERT INTO categories (name, description) VALUES (?, ?)\", [\n                    category.name,\n                    category.description\n                ]);\n            }\n        }\n        // Import initial products data if table is empty\n        const productsCount = await db.get(\"SELECT COUNT(*) as count FROM products\");\n        if (productsCount.count === 0) {\n            try {\n                // Try to load products from JSON file\n                const fs = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs */ \"fs\", 23));\n                const path = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! path */ \"path\", 23));\n                const productsJsonPath = path.join(process.cwd(), \"src\", \"data\", \"products.json\");\n                let products = [];\n                if (fs.existsSync(productsJsonPath)) {\n                    // Read JSON file\n                    const productsJson = fs.readFileSync(productsJsonPath, \"utf8\");\n                    products = JSON.parse(productsJson);\n                    console.log(\"Loaded products from JSON file\");\n                } else {\n                    // Fallback to default product\n                    products = [\n                        {\n                            id: 1,\n                            name: \"Sample Product\",\n                            description: \"A sample product created automatically\",\n                            image: \"https://placehold.co/600x400?text=Sample+Product\",\n                            specs: [\n                                \"Sample specification 1\",\n                                \"Sample specification 2\"\n                            ],\n                            useCases: [\n                                \"Sample use case 1\",\n                                \"Sample use case 2\"\n                            ],\n                            category: \"Sample Category\"\n                        }\n                    ];\n                    console.log(\"Using default product as fallback\");\n                }\n                // Insert products\n                for (const product of products){\n                    await db.run(\"INSERT INTO products (id, name, description, image, specs, useCases, category) VALUES (?, ?, ?, ?, ?, ?, ?)\", [\n                        product.id,\n                        product.name,\n                        product.description,\n                        product.image,\n                        JSON.stringify(product.specs),\n                        JSON.stringify(product.useCases),\n                        product.category\n                    ]);\n                }\n                console.log(`${products.length} products inserted into database`);\n            } catch (error) {\n                console.error(\"Error importing initial products:\", error);\n            }\n        }\n        // Store the db instance in module state\n        dbInstance = db;\n        return db;\n    } catch (error) {\n        console.error(\"Database initialization error:\", error);\n        throw error;\n    }\n}\n// Get database instance\nlet dbInstance = null;\nasync function getDB() {\n    if (!isServer) {\n        throw new Error(\"Database operations can only be performed on the server\");\n    }\n    if (!dbInstance) {\n        dbInstance = await initializeDB();\n    }\n    return dbInstance;\n}\n// Close database connection\nasync function closeDB() {\n    if (!isServer) {\n        throw new Error(\"Database operations can only be performed on the server\");\n    }\n    if (dbInstance) {\n        await dbInstance.close();\n        dbInstance = null;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/lib/db.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(api)/./node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fproducts&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fproducts.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();